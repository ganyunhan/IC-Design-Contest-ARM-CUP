-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity FFT_sinVec_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of FFT_sinVec_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10100101100011010011000101001010", 
    1 => "00100101000011010010111111010000", 
    2 => "00111111010111011011010000100100", 
    3 => "00111111100000000000000000000000", 
    4 => "00111111011100110111100010101011", 
    5 => "00111111010111011011010000100100", 
    6 => "00111111010010000010011000000011", 
    7 => "00111111001101010000010100101001", 
    8 => "00111111001001001000110111100011", 
    9 => "00111111000101100111100101101000", 
    10 => "00111111000010100110011101100010", 
    11 => "00111111000000000000000000000000", 
    12 => "00111110111011011110111111001000", 
    13 => "00111110110111100010010110000101", 
    14 => "00111110110100000100000000111010", 
    15 => "00111110110000111110111010100010", 
    16 => "00111110101110001111010001110011", 
    17 => "00111110101011110001110100111111", 
    18 => "00111110101001100011111100010100", 
    19 => "00111110100111100011011111011111", 
    20 => "00111110100101101110101011001000", 
    21 => "00111110100100000011111011101010", 
    22 => "00111110100010100010001100111010", 
    23 => "00111110100001001000010000001110", 
    24 => "00111110011111101010100010010111", 
    25 => "00111110011101010001000001001101", 
    26 => "00111110011011000010011110100110", 
    27 => "00111110011000111101110001001000", 
    28 => "00111110010111000010000100011000", 
    29 => "00111110010101001110011001011100", 
    30 => "00111110010011100010000110010110", 
    31 => "00111110010001111100010110101100", 
    32 => "00111110010000011100101011000001", 
    33 => "00111110001111000010100011110110", 
    34 => "00111110001101101101100001101111", 
    35 => "00111110001100011101000101001110", 
    36 => "00111110001011010000111001010110", 
    37 => "00111110001010001000101001001000", 
    38 => "00111110001001000100001010000101", 
    39 => "00111110001000000010111100110000", 
    40 => "00111110000111000101000001001000", 
    41 => "00111110000110001001110111110001", 
    42 => "00111110000101010001100000101011", 
    43 => "00111110000100011011100110110110", 
    44 => "00111110000011101000001010010101", 
    45 => "00111110000010110111000000100110", 
    46 => "00111110000010000111110100101100", 
    47 => "00111110000001011010100110101000", 
    48 => "00111110000000101111001011111010", 
    49 => "00111110000000000101011010000010", 
    50 => "00111101111110111010110111000001", 
    51 => "00111101111101101101110110101101", 
    52 => "00111101111100100011011110001011", 
    53 => "00111101111011011100000010011000", 
    54 => "00111101111010010111001110010111", 
    55 => "00111101111001010100101101001001", 
    56 => "00111101111000010100110011101100", 
    57 => "00111101110111010110111000000101", 
    58 => "00111101110110011010111010010010", 
    59 => "00111101110101100001001111010011", 
    60 => "00111101110100101001001101001011", 
    61 => "00111101110011110011001000111000", 
    62 => "00111101110010111110101001001111", 
    63 => "00111101110010001011110100100011", 
    64 => "00111101110001011010100100100010", 
    65 => "00111101110000101010110010111000", 
    66 => "00111101101111111100011011011010", 
    67 => "00111101101111001111011100000001", 
    68 => "00111101101110100011110000100001", 
    69 => "00111101101101111001010010100111", 
    70 => "00111101101101010000000010010011", 
    71 => "00111101101100100111111011011000", 
    72 => "00111101101100000000111001101011", 
    73 => "00111101101011011010111011000101", 
    74 => "00111101101010110101111101011111", 
    75 => "00111101101010010001111100101110", 
    76 => "00111101101001101110111000110001", 
    77 => "00111101101001001100101111100010", 
    78 => "00111101101000101011011010101110", 
    79 => "00111101101000001010111100011101", 
    80 => "00111101100111101011010000100000", 
    81 => "00111101100111001100010110111001", 
    82 => "00111101100110101110001101100001", 
    83 => "00111101100110010000110000001011", 
    84 => "00111101100101110100000000111110", 
    85 => "00111101100101010111111001100111", 
    86 => "00111101100100111100011110010011", 
    87 => "00111101100100100001101000101110", 
    88 => "00111101100100000111011011000000", 
    89 => "00111101100011101101110000111100", 
    90 => "00111101100011010100101100100111", 
    91 => "00111101100010111100001001110110", 
    92 => "00111101100010100100001010101111", 
    93 => "00111101100010001100101011000101", 
    94 => "00111101100001110101101010111000", 
    95 => "00111101100001011111001000000010", 
    96 => "00111101100001001001000100101010", 
    97 => "00111101100000110011011100100010", 
    98 => "00111101100000011110010001110001", 
    99 => "00111101100000001001100010010001", 
    100 => "00111101011111101010010111111000", 
    101 => "00111101011111000010011101100011", 
    102 => "00111101011110011011010101100011", 
    103 => "00111101011101110100111011101100", 
    104 => "00111101011101001111010100001010", 
    105 => "00111101011100101010011010110001", 
    106 => "00111101011100000110001011010100", 
    107 => "00111101011011100010100101110100", 
    108 => "00111101011010111111101010001111", 
    109 => "00111101011010011101011000101000", 
    110 => "00111101011001111011101100110000", 
    111 => "00111101011001011010100110101000", 
    112 => "00111101011000111010001010011100", 
    113 => "00111101011000011010001111110100", 
    114 => "00111101010111111010110110110000", 
    115 => "00111101010111011100000011011011", 
    116 => "00111101010110111101110001101010", 
    117 => "00111101010110011111111101010000", 
    118 => "00111101010110000010101010011001", 
    119 => "00111101010101100101111001000110", 
    120 => "00111101010101001001100101001010", 
    121 => "00111101010100101101101110100101", 
    122 => "00111101010100010010010101010111", 
    123 => "00111101010011110111010101010011", 
    124 => "00111101010011011100110010100111", 
    125 => "00111101010011000010101101010010", 
    126 => "00111101010010101001000001000111", 
    127 => "00111101010010001111101110000111", 
    128 => "00111101010001110110110100010001", 
    129 => "00111101010001011110001111011010", 
    130 => "00111101010001000110000111111010", 
    131 => "00111101010000101110010101011000", 
    132 => "00111101010000010110110111110100", 
    133 => "00111101001111111111110011011011", 
    134 => "00111101001111101001000100000000", 
    135 => "00111101001111010010101001100011", 
    136 => "00111101001110111100101000010000", 
    137 => "00111101001110100110110111110000", 
    138 => "00111101001110010001011000000001", 
    139 => "00111101001101111100010001011101", 
    140 => "00111101001101100111011011101010", 
    141 => "00111101001101010010110110101010", 
    142 => "00111101001100111110100110100111", 
    143 => "00111101001100101010100111010110", 
    144 => "00111101001100010110111101000100", 
    145 => "00111101001100000011011111010110", 
    146 => "00111101001011110000010110100111", 
    147 => "00111101001011011101011010011101", 
    148 => "00111101001011001010110011010010", 
    149 => "00111101001010111000011000101011", 
    150 => "00111101001010100110001010101010", 
    151 => "00111101001010010100010001100111", 
    152 => "00111101001010000010100101001010", 
    153 => "00111101001001110001001001011110", 
    154 => "00111101001001011111111010010111", 
    155 => "00111101001001001110110111110110", 
    156 => "00111101001000111110000110000111", 
    157 => "00111101001000101101100000111100", 
    158 => "00111101001000011101001000011000", 
    159 => "00111101001000001100111100011000", 
    160 => "00111101000111111100111100111110", 
    161 => "00111101000111101101001010001001", 
    162 => "00111101000111011101101000000110", 
    163 => "00111101000111001110001110011011", 
    164 => "00111101000110111111000001010110", 
    165 => "00111101000110101111111100101010", 
    166 => "00111101000110100001001000110000", 
    167 => "00111101000110010010011101001110", 
    168 => "00111101000110000011111110010010", 
    169 => "00111101000101110101100111101111", 
    170 => "00111101000101100111100001111101", 
    171 => "00111101000101011001100000011000", 
    172 => "00111101000101001011101011011000", 
    173 => "00111101000100111101111110110001", 
    174 => "00111101000100110000011110101111", 
    175 => "00111101000100100011000111000110", 
    176 => "00111101000100010101111100000011", 
    177 => "00111101000100001000110101001100", 
    178 => "00111101000011111011111010111010", 
    179 => "00111101000011101111001001000001", 
    180 => "00111101000011100010100011101101", 
    181 => "00111101000011010110000010100110", 
    182 => "00111101000011001001101110000100", 
    183 => "00111101000010111101011101101111", 
    184 => "00111101000010110001011001111111", 
    185 => "00111101000010100101011010011011", 
    186 => "00111101000010011001100111011101", 
    187 => "00111101000010001101111000101011", 
    188 => "00111101000010000010010010010010", 
    189 => "00111101000001110110110100010001", 
    190 => "00111101000001101011011110101010", 
    191 => "00111101000001100000010001011100", 
    192 => "00111101000001010101001100100110", 
    193 => "00111101000001001010001011111101", 
    194 => "00111101000000111111010011101101", 
    195 => "00111101000000110100100011110101", 
    196 => "00111101000000101001111000001010", 
    197 => "00111101000000011111010100111000", 
    198 => "00111101000000010100111001111111", 
    199 => "00111101000000001010100011010010", 
    200 => "00111101000000000000010100111110", 
    201 => "00111100111111101100010101101101", 
    202 => "00111100111111011000010010010000", 
    203 => "00111100111111000100010111001100", 
    204 => "00111100111110110000101100111001", 
    205 => "00111100111110011101001010111111", 
    206 => "00111100111110001001111001110111", 
    207 => "00111100111101110110110001001000", 
    208 => "00111100111101100011111001001011", 
    209 => "00111100111101010001000001001101", 
    210 => "00111100111100111110100010011011", 
    211 => "00111100111100101100000011101000", 
    212 => "00111100111100011001110101100111", 
    213 => "00111100111100000111101111111110", 
    214 => "00111100111011110101111011001000", 
    215 => "00111100111011100100001110101010", 
    216 => "00111100111011010010101010100110", 
    217 => "00111100111011000001001110111010", 
    218 => "00111100111010101111111011100111", 
    219 => "00111100111010011110111001000110", 
    220 => "00111100111010001101111110111101", 
    221 => "00111100111001111101001101001110", 
    222 => "00111100111001101100100011110111", 
    223 => "00111100111001011100000010111010", 
    224 => "00111100111001001011110010101110", 
    225 => "00111100111000111011100010100010", 
    226 => "00111100111000101011100011000111", 
    227 => "00111100111000011011100011101101", 
    228 => "00111100111000001011110101000101", 
    229 => "00111100110111111100001110110101", 
    230 => "00111100110111101100110000111110", 
    231 => "00111100110111011101010011000111", 
    232 => "00111100110111001110000110000010", 
    233 => "00111100110110111111000001010110", 
    234 => "00111100110110110000000101000011", 
    235 => "00111100110110100001010001001001", 
    236 => "00111100110110010010011101001110", 
    237 => "00111100110110000011111010000101", 
    238 => "00111100110101110101010110111101", 
    239 => "00111100110101100111000100100110", 
    240 => "00111100110101011000110010001111", 
    241 => "00111100110101001010110000101010", 
    242 => "00111100110100111100101111000101", 
    243 => "00111100110100101110110101111000", 
    244 => "00111100110100100001000101000101", 
    245 => "00111100110100010011011100101010", 
    246 => "00111100110100000101110100010000", 
    247 => "00111100110011111000011100100111", 
    248 => "00111100110011101011000100111110", 
    249 => "00111100110011011101110101101110", 
    250 => "00111100110011010000101110110111", 
    251 => "00111100110011000011110000011001", 
    252 => "00111100110010110110110001111010", 
    253 => "00111100110010101001111011110101", 
    254 => "00111100110010011101001110001001", 
    255 => "00111100110010010000101000110101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity FFT_sinVec is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of FFT_sinVec is
    component FFT_sinVec_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    FFT_sinVec_rom_U :  component FFT_sinVec_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


