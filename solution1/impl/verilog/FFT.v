// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        c_q0,
        c_address1,
        c_ce1,
        c_we1,
        c_d1,
        c_q1
);

parameter    ap_ST_fsm_state1 = 52'd1;
parameter    ap_ST_fsm_state2 = 52'd2;
parameter    ap_ST_fsm_state3 = 52'd4;
parameter    ap_ST_fsm_state4 = 52'd8;
parameter    ap_ST_fsm_state5 = 52'd16;
parameter    ap_ST_fsm_state6 = 52'd32;
parameter    ap_ST_fsm_state7 = 52'd64;
parameter    ap_ST_fsm_state8 = 52'd128;
parameter    ap_ST_fsm_state9 = 52'd256;
parameter    ap_ST_fsm_state10 = 52'd512;
parameter    ap_ST_fsm_state11 = 52'd1024;
parameter    ap_ST_fsm_state12 = 52'd2048;
parameter    ap_ST_fsm_state13 = 52'd4096;
parameter    ap_ST_fsm_state14 = 52'd8192;
parameter    ap_ST_fsm_state15 = 52'd16384;
parameter    ap_ST_fsm_state16 = 52'd32768;
parameter    ap_ST_fsm_state17 = 52'd65536;
parameter    ap_ST_fsm_state18 = 52'd131072;
parameter    ap_ST_fsm_state19 = 52'd262144;
parameter    ap_ST_fsm_state20 = 52'd524288;
parameter    ap_ST_fsm_state21 = 52'd1048576;
parameter    ap_ST_fsm_state22 = 52'd2097152;
parameter    ap_ST_fsm_state23 = 52'd4194304;
parameter    ap_ST_fsm_state24 = 52'd8388608;
parameter    ap_ST_fsm_state25 = 52'd16777216;
parameter    ap_ST_fsm_pp1_stage0 = 52'd33554432;
parameter    ap_ST_fsm_pp1_stage1 = 52'd67108864;
parameter    ap_ST_fsm_pp1_stage2 = 52'd134217728;
parameter    ap_ST_fsm_pp1_stage3 = 52'd268435456;
parameter    ap_ST_fsm_pp1_stage4 = 52'd536870912;
parameter    ap_ST_fsm_pp1_stage5 = 52'd1073741824;
parameter    ap_ST_fsm_pp1_stage6 = 52'd2147483648;
parameter    ap_ST_fsm_pp1_stage7 = 52'd4294967296;
parameter    ap_ST_fsm_pp1_stage8 = 52'd8589934592;
parameter    ap_ST_fsm_pp1_stage9 = 52'd17179869184;
parameter    ap_ST_fsm_pp1_stage10 = 52'd34359738368;
parameter    ap_ST_fsm_pp1_stage11 = 52'd68719476736;
parameter    ap_ST_fsm_pp1_stage12 = 52'd137438953472;
parameter    ap_ST_fsm_pp1_stage13 = 52'd274877906944;
parameter    ap_ST_fsm_pp1_stage14 = 52'd549755813888;
parameter    ap_ST_fsm_pp1_stage15 = 52'd1099511627776;
parameter    ap_ST_fsm_pp1_stage16 = 52'd2199023255552;
parameter    ap_ST_fsm_pp1_stage17 = 52'd4398046511104;
parameter    ap_ST_fsm_pp1_stage18 = 52'd8796093022208;
parameter    ap_ST_fsm_pp1_stage19 = 52'd17592186044416;
parameter    ap_ST_fsm_pp1_stage20 = 52'd35184372088832;
parameter    ap_ST_fsm_pp1_stage21 = 52'd70368744177664;
parameter    ap_ST_fsm_pp1_stage22 = 52'd140737488355328;
parameter    ap_ST_fsm_pp1_stage23 = 52'd281474976710656;
parameter    ap_ST_fsm_pp1_stage24 = 52'd562949953421312;
parameter    ap_ST_fsm_state52 = 52'd1125899906842624;
parameter    ap_ST_fsm_state53 = 52'd2251799813685248;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] c_address0;
output   c_ce0;
output   c_we0;
output  [31:0] c_d0;
input  [31:0] c_q0;
output  [8:0] c_address1;
output   c_ce1;
output   c_we1;
output  [31:0] c_d1;
input  [31:0] c_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] c_address0;
reg c_ce0;
reg c_we0;
reg[31:0] c_d0;
reg[8:0] c_address1;
reg c_ce1;
reg c_we1;
reg[31:0] c_d1;

(* fsm_encoding = "none" *) reg   [51:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] cosVec_address0;
reg    cosVec_ce0;
wire   [31:0] cosVec_q0;
wire   [7:0] sinVec_address0;
reg    sinVec_ce0;
wire   [31:0] sinVec_q0;
reg   [31:0] d_reg_279;
reg   [31:0] wik_reg_291;
reg   [7:0] k_1_reg_303;
reg   [31:0] wrk_1_reg_314;
reg   [31:0] wik_1_reg_326;
reg   [31:0] reg_390;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_pp1_stage2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state28_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
reg   [0:0] exitcond_reg_956;
reg   [0:0] tmp_68_reg_965;
reg   [31:0] reg_398;
reg   [31:0] reg_406;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state29_pp1_stage3_iter0;
wire    ap_block_pp1_stage3_11001;
reg   [31:0] reg_414;
wire   [31:0] grp_fu_349_p2;
reg   [31:0] reg_421;
wire    ap_CS_fsm_pp1_stage14;
wire    ap_block_state40_pp1_stage14_iter0;
wire    ap_block_pp1_stage14_11001;
wire    ap_CS_fsm_pp1_stage24;
wire    ap_block_state50_pp1_stage24_iter0;
wire    ap_block_pp1_stage24_11001;
wire   [8:0] k_3_fu_434_p2;
reg   [8:0] k_3_reg_799;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_444_p2;
reg   [0:0] tmp_reg_804;
wire   [0:0] exitcond3_fu_428_p2;
reg   [8:0] c_addr_reg_808;
reg   [8:0] c_addr_4_reg_813;
reg   [8:0] c_addr_5_reg_818;
reg   [8:0] c_addr_6_reg_823;
wire   [3:0] q_1_fu_500_p2;
wire    ap_CS_fsm_state7;
wire   [31:0] j_2_fu_560_p3;
wire   [0:0] exitcond2_fu_494_p2;
wire   [31:0] n_1_fu_568_p3;
wire   [31:0] j_4_fu_576_p2;
wire    ap_CS_fsm_state8;
wire   [30:0] tmp_48_fu_582_p1;
reg   [30:0] tmp_48_reg_851;
wire    ap_CS_fsm_state9;
wire   [31:0] n_fu_586_p2;
reg   [31:0] n_reg_856;
wire   [10:0] indvar_flatten_next_fu_598_p2;
reg   [10:0] indvar_flatten_next_reg_865;
wire   [0:0] exitcond1_fu_604_p2;
reg   [0:0] exitcond1_reg_870;
wire   [0:0] exitcond_flatten_fu_592_p2;
wire   [31:0] wr_mid2_v_v_fu_610_p3;
reg   [31:0] wr_mid2_v_v_reg_879;
wire    ap_CS_fsm_state10;
wire   [30:0] tmp_60_fu_632_p3;
reg   [30:0] tmp_60_reg_886;
wire   [31:0] n_mid2_fu_644_p3;
reg   [31:0] n_mid2_reg_891;
wire   [10:0] tmp_61_fu_650_p1;
reg   [10:0] tmp_61_reg_896;
wire   [31:0] wr_mid2_v_fu_654_p2;
reg   [31:0] wr_mid2_v_reg_901;
wire    ap_CS_fsm_state23;
wire   [7:0] j_3_mid2_fu_659_p3;
reg   [7:0] j_3_mid2_reg_906;
wire    ap_CS_fsm_state24;
wire   [31:0] grp_fu_616_p2;
reg   [31:0] nb_mid2_reg_922;
wire   [38:0] cp_rec_mid2_fu_671_p3;
reg   [38:0] cp_rec_mid2_reg_927;
wire    ap_CS_fsm_state25;
reg   [31:0] cosVec_load_reg_932;
reg   [31:0] sinVec_load_reg_938;
wire   [10:0] tmp_62_fu_681_p1;
reg   [10:0] tmp_62_reg_944;
wire   [0:0] tmp_64_fu_685_p2;
reg   [0:0] tmp_64_reg_952;
wire   [0:0] exitcond_fu_690_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state26_pp1_stage0_iter0;
wire    ap_block_state51_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [7:0] k_4_fu_696_p2;
reg   [7:0] k_4_reg_960;
wire   [0:0] tmp_68_fu_706_p2;
reg   [8:0] c_addr_7_reg_969;
reg   [8:0] c_addr_8_reg_974;
reg   [8:0] c_addr_9_reg_979;
reg   [8:0] c_addr_10_reg_984;
wire   [31:0] grp_fu_360_p2;
reg   [31:0] tmp_78_reg_989;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_state30_pp1_stage4_iter0;
wire    ap_block_pp1_stage4_11001;
wire   [31:0] grp_fu_365_p2;
reg   [31:0] tmp_79_reg_994;
wire   [31:0] grp_fu_370_p2;
reg   [31:0] tmp_80_reg_999;
wire   [31:0] grp_fu_375_p2;
reg   [31:0] tmp_81_reg_1004;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_state32_pp1_stage6_iter0;
wire    ap_block_pp1_stage6_11001;
reg   [31:0] tmp_72_reg_1019;
reg   [31:0] tmp_73_reg_1024;
reg   [31:0] wrk_reg_1029;
wire    ap_CS_fsm_pp1_stage13;
wire    ap_block_state39_pp1_stage13_iter0;
wire    ap_block_pp1_stage13_11001;
wire   [31:0] grp_fu_353_p2;
reg   [31:0] wik_2_reg_1034;
reg   [31:0] di_1_reg_1039;
wire    ap_CS_fsm_pp1_stage15;
wire    ap_block_state41_pp1_stage15_iter0;
wire    ap_block_pp1_stage15_11001;
reg   [31:0] tmp_76_reg_1044;
wire    ap_CS_fsm_pp1_stage23;
wire    ap_block_state49_pp1_stage23_iter0;
wire    ap_block_pp1_stage23_11001;
wire   [7:0] j_5_fu_782_p2;
reg   [7:0] j_5_reg_1049;
wire    ap_CS_fsm_state52;
wire   [38:0] cp_addr_rec_fu_791_p2;
wire    ap_CS_fsm_state53;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state26;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage24_subdone;
reg   [8:0] k_reg_175;
reg   [31:0] j_reg_186;
reg   [3:0] q_reg_198;
wire    ap_CS_fsm_state6;
reg   [31:0] j_1_reg_209;
reg   [31:0] n3_reg_220;
reg   [10:0] indvar_flatten_reg_232;
reg   [31:0] n_2_reg_243;
reg   [7:0] j_3_reg_255;
reg   [38:0] cp_rec_reg_267;
reg   [31:0] ap_phi_mux_d_phi_fu_283_p4;
wire    ap_block_pp1_stage0;
reg   [31:0] ap_phi_mux_wik_phi_fu_295_p4;
reg   [7:0] ap_phi_mux_k_1_phi_fu_307_p4;
reg   [31:0] ap_phi_reg_pp1_iter0_wrk_1_reg_314;
reg   [31:0] ap_phi_reg_pp1_iter0_wik_1_reg_326;
reg   [31:0] cp_s_reg_338;
wire   [63:0] tmp_53_fu_456_p1;
wire   [63:0] tmp_55_fu_467_p1;
wire  signed [63:0] tmp_56_fu_478_p1;
wire  signed [63:0] tmp_58_fu_489_p1;
wire  signed [63:0] wr_mid2_fu_666_p1;
wire   [63:0] cp_sum_cast_fu_726_p1;
wire   [63:0] cp_sum9_cast_fu_746_p1;
wire   [63:0] cp_sum1_cast_fu_761_p1;
wire   [63:0] cp_sum2_cast_fu_777_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state27_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire    ap_block_pp1_stage1;
wire    ap_block_pp1_stage2;
wire    ap_CS_fsm_pp1_stage22;
wire    ap_block_state48_pp1_stage22_iter0;
wire    ap_block_pp1_stage22_11001;
wire    ap_block_pp1_stage22;
wire    ap_block_pp1_stage23;
wire    ap_block_pp1_stage24;
reg   [31:0] grp_fu_349_p0;
reg   [31:0] grp_fu_349_p1;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
wire    ap_block_pp1_stage6;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
wire    ap_block_pp1_stage14;
wire    ap_block_pp1_stage15;
wire    ap_CS_fsm_pp1_stage16;
wire    ap_block_pp1_stage16;
reg   [31:0] grp_fu_353_p0;
reg   [31:0] grp_fu_353_p1;
reg   [31:0] grp_fu_360_p0;
reg   [31:0] grp_fu_360_p1;
reg   [31:0] grp_fu_365_p0;
reg   [31:0] grp_fu_365_p1;
reg   [31:0] grp_fu_370_p0;
reg   [31:0] grp_fu_370_p1;
reg   [31:0] grp_fu_375_p0;
reg   [31:0] grp_fu_375_p1;
wire   [31:0] k_cast3_fu_440_p1;
wire   [8:0] i0_fu_450_p2;
wire   [8:0] tmp_54_fu_461_p2;
wire  signed [31:0] i1_fu_472_p2;
wire   [31:0] tmp_57_fu_483_p2;
wire   [0:0] slt_fu_506_p2;
wire   [30:0] tmp_65_fu_518_p4;
wire   [0:0] rev_fu_512_p2;
wire   [0:0] icmp_fu_528_p2;
wire   [30:0] tmp_66_fu_546_p4;
wire   [0:0] or_cond_fu_534_p2;
wire   [31:0] j_6_fu_540_p2;
wire   [31:0] n_3_fu_556_p1;
wire   [10:0] grp_fu_616_p0;
wire   [30:0] tmp_59_fu_622_p4;
wire   [31:0] tmp_52_fu_638_p2;
wire   [31:0] j_3_cast2_fu_678_p1;
wire   [30:0] k_1_cast1_fu_702_p1;
wire   [7:0] i0_1_fu_711_p2;
wire   [10:0] tmp_39_fu_717_p1;
wire   [10:0] cp_sum_fu_721_p2;
wire   [7:0] tmp_69_fu_731_p2;
wire   [10:0] tmp_75_cast_fu_737_p1;
wire   [10:0] cp_sum9_fu_741_p2;
wire   [10:0] tmp_76_cast_fu_751_p2;
wire   [10:0] cp_sum1_fu_756_p2;
wire   [10:0] tmp_78_cast_fu_766_p2;
wire   [10:0] cp_sum2_fu_772_p2;
wire  signed [38:0] cp_cast_fu_787_p1;
reg   [1:0] grp_fu_349_opcode;
wire    ap_block_state33_pp1_stage7_iter0;
wire    ap_block_pp1_stage7_00001;
wire    ap_block_pp1_stage14_00001;
wire    ap_block_pp1_stage15_00001;
wire    ap_block_state31_pp1_stage5_iter0;
wire    ap_block_pp1_stage5_00001;
wire    ap_block_pp1_stage6_00001;
wire    ap_block_state42_pp1_stage16_iter0;
wire    ap_block_pp1_stage16_00001;
reg   [1:0] grp_fu_353_opcode;
reg    grp_fu_616_ap_start;
wire    grp_fu_616_ap_done;
reg   [51:0] ap_NS_fsm;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_pp1_stage4_subdone;
wire    ap_block_pp1_stage5_subdone;
wire    ap_block_pp1_stage6_subdone;
wire    ap_block_pp1_stage7_subdone;
wire    ap_block_state34_pp1_stage8_iter0;
wire    ap_block_pp1_stage8_subdone;
wire    ap_block_state35_pp1_stage9_iter0;
wire    ap_block_pp1_stage9_subdone;
wire    ap_block_state36_pp1_stage10_iter0;
wire    ap_block_pp1_stage10_subdone;
wire    ap_block_state37_pp1_stage11_iter0;
wire    ap_block_pp1_stage11_subdone;
wire    ap_block_state38_pp1_stage12_iter0;
wire    ap_block_pp1_stage12_subdone;
wire    ap_block_pp1_stage13_subdone;
wire    ap_block_pp1_stage14_subdone;
wire    ap_block_pp1_stage15_subdone;
wire    ap_block_pp1_stage16_subdone;
wire    ap_block_state43_pp1_stage17_iter0;
wire    ap_block_pp1_stage17_subdone;
wire    ap_block_state44_pp1_stage18_iter0;
wire    ap_block_pp1_stage18_subdone;
wire    ap_block_state45_pp1_stage19_iter0;
wire    ap_block_pp1_stage19_subdone;
wire    ap_block_state46_pp1_stage20_iter0;
wire    ap_block_pp1_stage20_subdone;
wire    ap_block_state47_pp1_stage21_iter0;
wire    ap_block_pp1_stage21_subdone;
wire    ap_block_pp1_stage22_subdone;
wire    ap_block_pp1_stage23_subdone;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_1138;
reg    ap_condition_1141;
reg    ap_condition_1145;

// power-on initialization
initial begin
#0 ap_CS_fsm = 52'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

FFT_cosVec #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
cosVec_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cosVec_address0),
    .ce0(cosVec_ce0),
    .q0(cosVec_q0)
);

FFT_sinVec #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sinVec_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sinVec_address0),
    .ce0(sinVec_ce0),
    .q0(sinVec_q0)
);

voicerec_faddfsubbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_faddfsubbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_349_p0),
    .din1(grp_fu_349_p1),
    .opcode(grp_fu_349_opcode),
    .ce(1'b1),
    .dout(grp_fu_349_p2)
);

voicerec_faddfsubbkb #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_faddfsubbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_353_p0),
    .din1(grp_fu_353_p1),
    .opcode(grp_fu_353_opcode),
    .ce(1'b1),
    .dout(grp_fu_353_p2)
);

voicerec_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ncud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_360_p0),
    .din1(grp_fu_360_p1),
    .ce(1'b1),
    .dout(grp_fu_360_p2)
);

voicerec_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ncud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_365_p0),
    .din1(grp_fu_365_p1),
    .ce(1'b1),
    .dout(grp_fu_365_p2)
);

voicerec_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ncud_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_370_p0),
    .din1(grp_fu_370_p1),
    .ce(1'b1),
    .dout(grp_fu_370_p2)
);

voicerec_fmul_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_fmul_32ncud_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_375_p0),
    .din1(grp_fu_375_p1),
    .ce(1'b1),
    .dout(grp_fu_375_p2)
);

voicerec_sdiv_11ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
voicerec_sdiv_11ndEe_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_616_ap_start),
    .done(grp_fu_616_ap_done),
    .din0(grp_fu_616_p0),
    .din1(wr_mid2_v_v_fu_610_p3),
    .ce(1'b1),
    .dout(grp_fu_616_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state25) & (tmp_64_fu_685_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state26) & (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage24_subdone) & (1'b1 == ap_CS_fsm_pp1_stage24))))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state26);
        end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage24_subdone) & (1'b1 == ap_CS_fsm_pp1_stage24)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state25) & (tmp_64_fu_685_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1141)) begin
            ap_phi_reg_pp1_iter0_wik_1_reg_326 <= ap_phi_mux_wik_phi_fu_295_p4;
        end else if ((1'b1 == ap_condition_1138)) begin
            ap_phi_reg_pp1_iter0_wik_1_reg_326 <= wik_2_reg_1034;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_1141)) begin
            ap_phi_reg_pp1_iter0_wrk_1_reg_314 <= ap_phi_mux_d_phi_fu_283_p4;
        end else if ((1'b1 == ap_condition_1138)) begin
            ap_phi_reg_pp1_iter0_wrk_1_reg_314 <= wrk_reg_1029;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_428_p2 == 1'd1))) begin
        cp_rec_reg_267 <= 39'd0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        cp_rec_reg_267 <= cp_addr_rec_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (tmp_64_reg_952 == 1'd1))) begin
                cp_s_reg_338[31 : 1] <= n_mid2_reg_891[31 : 1];
    end else if (((1'b1 == ap_CS_fsm_state25) & (tmp_64_fu_685_p2 == 1'd0))) begin
                cp_s_reg_338[1] <= 1'b0;
        cp_s_reg_338[2] <= 1'b0;
        cp_s_reg_338[3] <= 1'b0;
        cp_s_reg_338[4] <= 1'b0;
        cp_s_reg_338[5] <= 1'b0;
        cp_s_reg_338[6] <= 1'b0;
        cp_s_reg_338[7] <= 1'b0;
        cp_s_reg_338[8] <= 1'b0;
        cp_s_reg_338[9] <= 1'b0;
        cp_s_reg_338[10] <= 1'b0;
        cp_s_reg_338[11] <= 1'b0;
        cp_s_reg_338[12] <= 1'b0;
        cp_s_reg_338[13] <= 1'b0;
        cp_s_reg_338[14] <= 1'b0;
        cp_s_reg_338[15] <= 1'b0;
        cp_s_reg_338[16] <= 1'b0;
        cp_s_reg_338[17] <= 1'b0;
        cp_s_reg_338[18] <= 1'b0;
        cp_s_reg_338[19] <= 1'b0;
        cp_s_reg_338[20] <= 1'b0;
        cp_s_reg_338[21] <= 1'b0;
        cp_s_reg_338[22] <= 1'b0;
        cp_s_reg_338[23] <= 1'b0;
        cp_s_reg_338[24] <= 1'b0;
        cp_s_reg_338[25] <= 1'b0;
        cp_s_reg_338[26] <= 1'b0;
        cp_s_reg_338[27] <= 1'b0;
        cp_s_reg_338[28] <= 1'b0;
        cp_s_reg_338[29] <= 1'b0;
        cp_s_reg_338[30] <= 1'b0;
        cp_s_reg_338[31] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_64_fu_685_p2 == 1'd1))) begin
        d_reg_279 <= 32'd1065353216;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_956 == 1'd0))) begin
        d_reg_279 <= wrk_1_reg_314;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_428_p2 == 1'd1))) begin
        indvar_flatten_reg_232 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        indvar_flatten_reg_232 <= indvar_flatten_next_reg_865;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_494_p2 == 1'd0))) begin
        j_1_reg_209 <= j_2_fu_560_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        j_1_reg_209 <= j_reg_186;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_428_p2 == 1'd1))) begin
        j_3_reg_255 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        j_3_reg_255 <= j_5_reg_1049;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_186 <= j_4_fu_576_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_186 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_64_fu_685_p2 == 1'd1))) begin
        k_1_reg_303 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_956 == 1'd0))) begin
        k_1_reg_303 <= k_4_reg_960;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_reg_175 <= k_3_reg_799;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_reg_175 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_494_p2 == 1'd0))) begin
        n3_reg_220 <= n_1_fu_568_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        n3_reg_220 <= 32'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_428_p2 == 1'd1))) begin
        n_2_reg_243 <= 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        n_2_reg_243 <= wr_mid2_v_v_reg_879;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_494_p2 == 1'd0))) begin
        q_reg_198 <= q_1_fu_500_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_reg_198 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        reg_390 <= c_q1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_390 <= c_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        reg_398 <= c_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_398 <= c_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0))) begin
        reg_406 <= c_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_406 <= c_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3_11001) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0))) begin
        reg_414 <= c_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_414 <= c_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_64_fu_685_p2 == 1'd1))) begin
        wik_reg_291 <= 32'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_956 == 1'd0))) begin
        wik_reg_291 <= wik_1_reg_326;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_68_fu_706_p2 == 1'd1) & (exitcond_fu_690_p2 == 1'd0))) begin
        c_addr_10_reg_984 <= cp_sum2_cast_fu_777_p1;
        c_addr_7_reg_969 <= cp_sum_cast_fu_726_p1;
        c_addr_8_reg_974 <= cp_sum9_cast_fu_746_p1;
        c_addr_9_reg_979 <= cp_sum1_cast_fu_761_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_444_p2 == 1'd1) & (exitcond3_fu_428_p2 == 1'd0))) begin
        c_addr_4_reg_813[8 : 1] <= tmp_55_fu_467_p1[8 : 1];
        c_addr_reg_808[8 : 1] <= tmp_53_fu_456_p1[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_addr_5_reg_818[8 : 1] <= tmp_56_fu_478_p1[8 : 1];
        c_addr_6_reg_823[8 : 1] <= tmp_58_fu_489_p1[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        cosVec_load_reg_932 <= cosVec_q0;
        cp_rec_mid2_reg_927 <= cp_rec_mid2_fu_671_p3;
        sinVec_load_reg_938 <= sinVec_q0;
        tmp_62_reg_944 <= tmp_62_fu_681_p1;
        tmp_64_reg_952 <= tmp_64_fu_685_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage15_11001) & (1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0))) begin
        di_1_reg_1039 <= grp_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond_flatten_fu_592_p2 == 1'd0))) begin
        exitcond1_reg_870 <= exitcond1_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_reg_956 <= exitcond_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten_next_reg_865 <= indvar_flatten_next_fu_598_p2;
        n_reg_856[31 : 1] <= n_fu_586_p2[31 : 1];
        tmp_48_reg_851 <= tmp_48_fu_582_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j_3_mid2_reg_906 <= j_3_mid2_fu_659_p3;
        nb_mid2_reg_922 <= grp_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        j_5_reg_1049 <= j_5_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_3_reg_799 <= k_3_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        k_4_reg_960 <= k_4_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        n_mid2_reg_891[31 : 1] <= n_mid2_fu_644_p3[31 : 1];
        tmp_60_reg_886 <= tmp_60_fu_632_p3;
        tmp_61_reg_896 <= tmp_61_fu_650_p1;
        wr_mid2_v_v_reg_879 <= wr_mid2_v_v_fu_610_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage24) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage24_11001) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage14) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage14_11001) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)))) begin
        reg_421 <= grp_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_fu_690_p2 == 1'd0))) begin
        tmp_68_reg_965 <= tmp_68_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage6_11001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0))) begin
        tmp_72_reg_1019 <= grp_fu_370_p2;
        tmp_73_reg_1024 <= grp_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage23_11001) & (1'b1 == ap_CS_fsm_pp1_stage23) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0))) begin
        tmp_76_reg_1044 <= grp_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0))) begin
        tmp_78_reg_989 <= grp_fu_360_p2;
        tmp_79_reg_994 <= grp_fu_365_p2;
        tmp_80_reg_999 <= grp_fu_370_p2;
        tmp_81_reg_1004 <= grp_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_428_p2 == 1'd0))) begin
        tmp_reg_804 <= tmp_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage15_11001) & (1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        wik_1_reg_326 <= ap_phi_reg_pp1_iter0_wik_1_reg_326;
        wrk_1_reg_314 <= ap_phi_reg_pp1_iter0_wrk_1_reg_314;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage13_11001) & (1'b1 == ap_CS_fsm_pp1_stage13) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0))) begin
        wik_2_reg_1034 <= grp_fu_353_p2;
        wrk_reg_1029 <= grp_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        wr_mid2_v_reg_901 <= wr_mid2_v_fu_654_p2;
    end
end

always @ (*) begin
    if ((exitcond_fu_690_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state9) & (exitcond_flatten_fu_592_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_956 == 1'd0))) begin
        ap_phi_mux_d_phi_fu_283_p4 = wrk_1_reg_314;
    end else begin
        ap_phi_mux_d_phi_fu_283_p4 = d_reg_279;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_956 == 1'd0))) begin
        ap_phi_mux_k_1_phi_fu_307_p4 = k_4_reg_960;
    end else begin
        ap_phi_mux_k_1_phi_fu_307_p4 = k_1_reg_303;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_956 == 1'd0))) begin
        ap_phi_mux_wik_phi_fu_295_p4 = wik_1_reg_326;
    end else begin
        ap_phi_mux_wik_phi_fu_295_p4 = wik_reg_291;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond_flatten_fu_592_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage23) & (1'b1 == ap_CS_fsm_pp1_stage23) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)))) begin
        c_address0 = c_addr_8_reg_974;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        c_address0 = c_addr_10_reg_984;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c_address0 = c_addr_5_reg_818;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c_address0 = c_addr_reg_808;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        c_address0 = tmp_56_fu_478_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c_address0 = tmp_53_fu_456_p1;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage22) & (1'b1 == ap_CS_fsm_pp1_stage22) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)))) begin
        c_address1 = c_addr_7_reg_969;
    end else if ((((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage24) & (1'b1 == ap_CS_fsm_pp1_stage24) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        c_address1 = c_addr_9_reg_979;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c_address1 = c_addr_6_reg_823;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c_address1 = c_addr_4_reg_813;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        c_address1 = tmp_58_fu_489_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        c_address1 = tmp_55_fu_467_p1;
    end else begin
        c_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage23_11001) & (1'b1 == ap_CS_fsm_pp1_stage23) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)))) begin
        c_ce0 = 1'b1;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp1_stage22_11001) & (1'b1 == ap_CS_fsm_pp1_stage22) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage24) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage24_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)))) begin
        c_ce1 = 1'b1;
    end else begin
        c_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_d0 = reg_421;
    end else if (((1'b0 == ap_block_pp1_stage23) & (1'b1 == ap_CS_fsm_pp1_stage23) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c_d0 = grp_fu_349_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c_d0 = reg_390;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c_d0 = reg_406;
    end else begin
        c_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage24) & (1'b1 == ap_CS_fsm_pp1_stage24) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c_d1 = tmp_76_reg_1044;
    end else if (((1'b0 == ap_block_pp1_stage22) & (1'b1 == ap_CS_fsm_pp1_stage22) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        c_d1 = grp_fu_349_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c_d1 = reg_398;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        c_d1 = reg_414;
    end else begin
        c_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state6) & (tmp_reg_804 == 1'd1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)) | ((1'b0 == ap_block_pp1_stage23_11001) & (1'b1 == ap_CS_fsm_pp1_stage23) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)))) begin
        c_we0 = 1'b1;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state6) & (tmp_reg_804 == 1'd1)) | ((1'b0 == ap_block_pp1_stage22_11001) & (1'b1 == ap_CS_fsm_pp1_stage22) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage24) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage24_11001) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)))) begin
        c_we1 = 1'b1;
    end else begin
        c_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        cosVec_ce0 = 1'b1;
    end else begin
        cosVec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage16_00001) & (1'b1 == ap_CS_fsm_pp1_stage16) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)) | ((1'b0 == ap_block_pp1_stage5_00001) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)) | ((1'b0 == ap_block_pp1_stage6_00001) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)))) begin
        grp_fu_349_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp1_stage7_00001) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)) | ((1'b0 == ap_block_pp1_stage15_00001) & (1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)) | ((1'b0 == ap_block_pp1_stage14_00001) & (1'b1 == ap_CS_fsm_pp1_stage14) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0)))) begin
        grp_fu_349_opcode = 2'd0;
    end else begin
        grp_fu_349_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage16) & (1'b1 == ap_CS_fsm_pp1_stage16) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage15) & (1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        grp_fu_349_p0 = reg_414;
    end else if (((1'b0 == ap_block_pp1_stage14) & (1'b1 == ap_CS_fsm_pp1_stage14) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p0 = reg_406;
    end else if (((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p0 = tmp_72_reg_1019;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p0 = grp_fu_360_p2;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p0 = tmp_78_reg_989;
    end else begin
        grp_fu_349_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage16) & (1'b1 == ap_CS_fsm_pp1_stage16) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p1 = di_1_reg_1039;
    end else if ((((1'b0 == ap_block_pp1_stage15) & (1'b1 == ap_CS_fsm_pp1_stage15) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage14) & (1'b1 == ap_CS_fsm_pp1_stage14) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        grp_fu_349_p1 = grp_fu_349_p2;
    end else if (((1'b0 == ap_block_pp1_stage7) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p1 = tmp_73_reg_1024;
    end else if (((1'b0 == ap_block_pp1_stage6) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p1 = grp_fu_365_p2;
    end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        grp_fu_349_p1 = tmp_79_reg_994;
    end else begin
        grp_fu_349_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1145)) begin
        if (((1'b0 == ap_block_pp1_stage15_00001) & (1'b1 == ap_CS_fsm_pp1_stage15))) begin
            grp_fu_353_opcode = 2'd1;
        end else if (((1'b0 == ap_block_pp1_stage5_00001) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            grp_fu_353_opcode = 2'd0;
        end else begin
            grp_fu_353_opcode = 'bx;
        end
    end else begin
        grp_fu_353_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage15) & (1'b1 == ap_CS_fsm_pp1_stage15))) begin
            grp_fu_353_p0 = reg_406;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            grp_fu_353_p0 = tmp_80_reg_999;
        end else begin
            grp_fu_353_p0 = 'bx;
        end
    end else begin
        grp_fu_353_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage15) & (1'b1 == ap_CS_fsm_pp1_stage15))) begin
            grp_fu_353_p1 = reg_421;
        end else if (((1'b0 == ap_block_pp1_stage5) & (1'b1 == ap_CS_fsm_pp1_stage5))) begin
            grp_fu_353_p1 = tmp_81_reg_1004;
        end else begin
            grp_fu_353_p1 = 'bx;
        end
    end else begin
        grp_fu_353_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_360_p0 = d_reg_279;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_360_p0 = cosVec_load_reg_932;
        end else begin
            grp_fu_360_p0 = 'bx;
        end
    end else begin
        grp_fu_360_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_360_p1 = c_q1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_360_p1 = ap_phi_mux_d_phi_fu_283_p4;
        end else begin
            grp_fu_360_p1 = 'bx;
        end
    end else begin
        grp_fu_360_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_365_p0 = wik_reg_291;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_365_p0 = sinVec_load_reg_938;
        end else begin
            grp_fu_365_p0 = 'bx;
        end
    end else begin
        grp_fu_365_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_365_p1 = c_q0;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_365_p1 = ap_phi_mux_wik_phi_fu_295_p4;
        end else begin
            grp_fu_365_p1 = 'bx;
        end
    end else begin
        grp_fu_365_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_370_p0 = d_reg_279;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_370_p0 = cosVec_load_reg_932;
        end else begin
            grp_fu_370_p0 = 'bx;
        end
    end else begin
        grp_fu_370_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_370_p1 = c_q0;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_370_p1 = ap_phi_mux_wik_phi_fu_295_p4;
        end else begin
            grp_fu_370_p1 = 'bx;
        end
    end else begin
        grp_fu_370_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_375_p0 = wik_reg_291;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_375_p0 = sinVec_load_reg_938;
        end else begin
            grp_fu_375_p0 = 'bx;
        end
    end else begin
        grp_fu_375_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            grp_fu_375_p1 = c_q1;
        end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            grp_fu_375_p1 = ap_phi_mux_d_phi_fu_283_p4;
        end else begin
            grp_fu_375_p1 = 'bx;
        end
    end else begin
        grp_fu_375_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_616_ap_start = 1'b1;
    end else begin
        grp_fu_616_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        sinVec_ce0 = 1'b1;
    end else begin
        sinVec_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_428_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_428_p2 == 1'd0) & (tmp_fu_444_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_494_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond_flatten_fu_592_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (tmp_64_fu_685_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_690_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_690_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((1'b0 == ap_block_pp1_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_pp1_stage9 : begin
            if ((1'b0 == ap_block_pp1_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end
        end
        ap_ST_fsm_pp1_stage10 : begin
            if ((1'b0 == ap_block_pp1_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end
        end
        ap_ST_fsm_pp1_stage11 : begin
            if ((1'b0 == ap_block_pp1_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end
        end
        ap_ST_fsm_pp1_stage12 : begin
            if ((1'b0 == ap_block_pp1_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end
        end
        ap_ST_fsm_pp1_stage13 : begin
            if ((1'b0 == ap_block_pp1_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end
        end
        ap_ST_fsm_pp1_stage14 : begin
            if ((1'b0 == ap_block_pp1_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end
        end
        ap_ST_fsm_pp1_stage15 : begin
            if ((1'b0 == ap_block_pp1_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end
        end
        ap_ST_fsm_pp1_stage16 : begin
            if ((1'b0 == ap_block_pp1_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end
        end
        ap_ST_fsm_pp1_stage17 : begin
            if ((1'b0 == ap_block_pp1_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end
        end
        ap_ST_fsm_pp1_stage18 : begin
            if ((1'b0 == ap_block_pp1_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end
        end
        ap_ST_fsm_pp1_stage19 : begin
            if ((1'b0 == ap_block_pp1_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end
        end
        ap_ST_fsm_pp1_stage20 : begin
            if ((1'b0 == ap_block_pp1_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end
        end
        ap_ST_fsm_pp1_stage21 : begin
            if ((1'b0 == ap_block_pp1_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage21;
            end
        end
        ap_ST_fsm_pp1_stage22 : begin
            if ((1'b0 == ap_block_pp1_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage22;
            end
        end
        ap_ST_fsm_pp1_stage23 : begin
            if ((1'b0 == ap_block_pp1_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage23;
            end
        end
        ap_ST_fsm_pp1_stage24 : begin
            if ((1'b0 == ap_block_pp1_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage24;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp1_stage13 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp1_stage14 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp1_stage15 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp1_stage16 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage22 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp1_stage23 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp1_stage24 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1138 = ((1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_11001) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0));
end

always @ (*) begin
    ap_condition_1141 = ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_68_fu_706_p2 == 1'd0) & (exitcond_fu_690_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1145 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_68_reg_965 == 1'd1) & (exitcond_reg_956 == 1'd0));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cosVec_address0 = wr_mid2_fu_666_p1;

assign cp_addr_rec_fu_791_p2 = ($signed(cp_cast_fu_787_p1) + $signed(cp_rec_mid2_reg_927));

assign cp_cast_fu_787_p1 = $signed(cp_s_reg_338);

assign cp_rec_mid2_fu_671_p3 = ((exitcond1_reg_870[0:0] === 1'b1) ? 39'd0 : cp_rec_reg_267);

assign cp_sum1_cast_fu_761_p1 = cp_sum1_fu_756_p2;

assign cp_sum1_fu_756_p2 = (tmp_76_cast_fu_751_p2 + tmp_62_reg_944);

assign cp_sum2_cast_fu_777_p1 = cp_sum2_fu_772_p2;

assign cp_sum2_fu_772_p2 = (tmp_78_cast_fu_766_p2 + tmp_62_reg_944);

assign cp_sum9_cast_fu_746_p1 = cp_sum9_fu_741_p2;

assign cp_sum9_fu_741_p2 = (tmp_75_cast_fu_737_p1 + tmp_62_reg_944);

assign cp_sum_cast_fu_726_p1 = cp_sum_fu_721_p2;

assign cp_sum_fu_721_p2 = (tmp_39_fu_717_p1 + tmp_62_reg_944);

assign exitcond1_fu_604_p2 = ((j_3_reg_255 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond2_fu_494_p2 = ((q_reg_198 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond3_fu_428_p2 = ((k_reg_175 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_592_p2 = ((indvar_flatten_reg_232 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_fu_690_p2 = ((ap_phi_mux_k_1_phi_fu_307_p4 == 8'd128) ? 1'b1 : 1'b0);

assign grp_fu_616_p0 = 32'd256;

assign i0_1_fu_711_p2 = ap_phi_mux_k_1_phi_fu_307_p4 << 8'd1;

assign i0_fu_450_p2 = k_reg_175 << 9'd1;

assign i1_fu_472_p2 = j_reg_186 << 32'd1;

assign icmp_fu_528_p2 = (($signed(tmp_65_fu_518_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_598_p2 = (11'd1 + indvar_flatten_reg_232);

assign j_2_fu_560_p3 = ((or_cond_fu_534_p2[0:0] === 1'b1) ? j_6_fu_540_p2 : j_1_reg_209);

assign j_3_cast2_fu_678_p1 = j_3_mid2_reg_906;

assign j_3_mid2_fu_659_p3 = ((exitcond1_reg_870[0:0] === 1'b1) ? 8'd0 : j_3_reg_255);

assign j_4_fu_576_p2 = (j_1_reg_209 + n3_reg_220);

assign j_5_fu_782_p2 = (j_3_mid2_reg_906 + 8'd1);

assign j_6_fu_540_p2 = (j_1_reg_209 - n3_reg_220);

assign k_1_cast1_fu_702_p1 = ap_phi_mux_k_1_phi_fu_307_p4;

assign k_3_fu_434_p2 = (k_reg_175 + 9'd1);

assign k_4_fu_696_p2 = (ap_phi_mux_k_1_phi_fu_307_p4 + 8'd1);

assign k_cast3_fu_440_p1 = k_reg_175;

assign n_1_fu_568_p3 = ((or_cond_fu_534_p2[0:0] === 1'b1) ? n_3_fu_556_p1 : n3_reg_220);

assign n_3_fu_556_p1 = tmp_66_fu_546_p4;

assign n_fu_586_p2 = n_2_reg_243 << 32'd1;

assign n_mid2_fu_644_p3 = ((exitcond1_reg_870[0:0] === 1'b1) ? tmp_52_fu_638_p2 : n_reg_856);

assign or_cond_fu_534_p2 = (rev_fu_512_p2 & icmp_fu_528_p2);

assign q_1_fu_500_p2 = (q_reg_198 + 4'd1);

assign rev_fu_512_p2 = (slt_fu_506_p2 ^ 1'd1);

assign sinVec_address0 = wr_mid2_fu_666_p1;

assign slt_fu_506_p2 = (($signed(j_1_reg_209) < $signed(n3_reg_220)) ? 1'b1 : 1'b0);

assign tmp_39_fu_717_p1 = i0_1_fu_711_p2;

assign tmp_48_fu_582_p1 = n_2_reg_243[30:0];

assign tmp_52_fu_638_p2 = n_2_reg_243 << 32'd2;

assign tmp_53_fu_456_p1 = i0_fu_450_p2;

assign tmp_54_fu_461_p2 = (i0_fu_450_p2 | 9'd1);

assign tmp_55_fu_467_p1 = tmp_54_fu_461_p2;

assign tmp_56_fu_478_p1 = i1_fu_472_p2;

assign tmp_57_fu_483_p2 = (i1_fu_472_p2 | 32'd1);

assign tmp_58_fu_489_p1 = $signed(tmp_57_fu_483_p2);

assign tmp_59_fu_622_p4 = {{n_2_reg_243[31:1]}};

assign tmp_60_fu_632_p3 = ((exitcond1_reg_870[0:0] === 1'b1) ? tmp_48_reg_851 : tmp_59_fu_622_p4);

assign tmp_61_fu_650_p1 = wr_mid2_v_v_fu_610_p3[10:0];

assign tmp_62_fu_681_p1 = cp_rec_mid2_fu_671_p3[10:0];

assign tmp_64_fu_685_p2 = (($signed(j_3_cast2_fu_678_p1) < $signed(nb_mid2_reg_922)) ? 1'b1 : 1'b0);

assign tmp_65_fu_518_p4 = {{n3_reg_220[31:1]}};

assign tmp_66_fu_546_p4 = {{n3_reg_220[31:1]}};

assign tmp_68_fu_706_p2 = (($signed(k_1_cast1_fu_702_p1) < $signed(tmp_60_reg_886)) ? 1'b1 : 1'b0);

assign tmp_69_fu_731_p2 = (i0_1_fu_711_p2 | 8'd1);

assign tmp_75_cast_fu_737_p1 = tmp_69_fu_731_p2;

assign tmp_76_cast_fu_751_p2 = (tmp_61_reg_896 + tmp_39_fu_717_p1);

assign tmp_78_cast_fu_766_p2 = (tmp_76_cast_fu_751_p2 | 11'd1);

assign tmp_fu_444_p2 = (($signed(k_cast3_fu_440_p1) < $signed(j_reg_186)) ? 1'b1 : 1'b0);

assign wr_mid2_fu_666_p1 = $signed(wr_mid2_v_reg_901);

assign wr_mid2_v_fu_654_p2 = ($signed(32'd4294967295) + $signed(wr_mid2_v_v_reg_879));

assign wr_mid2_v_v_fu_610_p3 = ((exitcond1_reg_870[0:0] === 1'b1) ? n_reg_856 : n_2_reg_243);

always @ (posedge ap_clk) begin
    c_addr_reg_808[0] <= 1'b0;
    c_addr_4_reg_813[0] <= 1'b1;
    c_addr_5_reg_818[0] <= 1'b0;
    c_addr_6_reg_823[0] <= 1'b1;
    n_reg_856[0] <= 1'b0;
    n_mid2_reg_891[0] <= 1'b0;
    cp_s_reg_338[0] <= 1'b0;
end

endmodule //FFT
