-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity FFT_cosVec_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of FFT_cosVec_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00111111100000000000000000000000", 
    1 => "10111111100000000000000000000000", 
    2 => "10111111000000000000000000000000", 
    3 => "00100100100011010011000011111110", 
    4 => "00111110100111100011011111011111", 
    5 => "00111111000000000000000000000000", 
    6 => "00111111000111111001110100001010", 
    7 => "00111111001101010000010100101001", 
    8 => "00111111010001000001101100110011", 
    9 => "00111111010011110001101111101111", 
    10 => "00111111010101110101110000101001", 
    11 => "00111111010111011011010000100100", 
    12 => "00111111011000101010110110000010", 
    13 => "00111111011001101010010111111000", 
    14 => "00111111011010011101111001101010", 
    15 => "00111111011011001000001101100110", 
    16 => "00111111011011101011011001011011", 
    17 => "00111111011100001000111110000110", 
    18 => "00111111011100100010000101000010", 
    19 => "00111111011100110111100010101011", 
    20 => "00111111011101001010000000111100", 
    21 => "00111111011101011010000100100011", 
    22 => "00111111011101101000000111101101", 
    23 => "00111111011101110100011100110000", 
    24 => "00111111011101111111010011011100", 
    25 => "00111111011110001000111110000110", 
    26 => "00111111011110010001100100100110", 
    27 => "00111111011110011001010100000011", 
    28 => "00111111011110100000001111000101", 
    29 => "00111111011110100110100000001010", 
    30 => "00111111011110101100001001111010", 
    31 => "00111111011110110001010100001110", 
    32 => "00111111011110110101111111000100", 
    33 => "00111111011110111010001111101100", 
    34 => "00111111011110111110001011010110", 
    35 => "00111111011111000001110010000010", 
    36 => "00111111011111000101000110011000", 
    37 => "00111111011111001000001000010111", 
    38 => "00111111011111001010111101001111", 
    39 => "00111111011111001101100101000000", 
    40 => "00111111011111001111111111101011", 
    41 => "00111111011111010010001111110110", 
    42 => "00111111011111010100010101100011", 
    43 => "00111111011111010110010011011000", 
    44 => "00111111011111011000001001010110", 
    45 => "00111111011111011001110111011100", 
    46 => "00111111011111011011011101101011", 
    47 => "00111111011111011100111100000011", 
    48 => "00111111011111011110010111110011", 
    49 => "00111111011111011111101011101100", 
    50 => "00111111011111100000111100111101", 
    51 => "00111111011111100010001000111110", 
    52 => "00111111011111100011001111110000", 
    53 => "00111111011111100100010011111010", 
    54 => "00111111011111100101010010110101", 
    55 => "00111111011111100110001111000111", 
    56 => "00111111011111100111001000110010", 
    57 => "00111111011111100111111111110110", 
    58 => "00111111011111101000110001101001", 
    59 => "00111111011111101001100011011101", 
    60 => "00111111011111101010010010101001", 
    61 => "00111111011111101010111111001101", 
    62 => "00111111011111101011101001001001", 
    63 => "00111111011111101100010000011110", 
    64 => "00111111011111101100110111110010", 
    65 => "00111111011111101101011100011111", 
    66 => "00111111011111101110000001001100", 
    67 => "00111111011111101110100000101001", 
    68 => "00111111011111101111000010101110", 
    69 => "00111111011111101111011111100100", 
    70 => "00111111011111101111111111000001", 
    71 => "00111111011111110000011001001111", 
    72 => "00111111011111110000110110000100", 
    73 => "00111111011111110001010000010010", 
    74 => "00111111011111110001100111111000", 
    75 => "00111111011111110001111111011110", 
    76 => "00111111011111110010010111000100", 
    77 => "00111111011111110010101110101010", 
    78 => "00111111011111110011000011101000", 
    79 => "00111111011111110011011000100110", 
    80 => "00111111011111110011101010111101", 
    81 => "00111111011111110011111111111011", 
    82 => "00111111011111110100010010010001", 
    83 => "00111111011111110100100010000000", 
    84 => "00111111011111110100110100010110", 
    85 => "00111111011111110101000100000101", 
    86 => "00111111011111110101010011110011", 
    87 => "00111111011111110101100011100010", 
    88 => "00111111011111110101110011010001", 
    89 => "00111111011111110110000000011000", 
    90 => "00111111011111110110010000000110", 
    91 => "00111111011111110110011101001101", 
    92 => "00111111011111110110101010010100", 
    93 => "00111111011111110110110111011011", 
    94 => "00111111011111110111000001111010", 
    95 => "00111111011111110111001111000001", 
    96 => "00111111011111110111011001100000", 
    97 => "00111111011111110111100110100111", 
    98 => "00111111011111110111110001000110", 
    99 => "00111111011111110111111011100101", 
    100 => "00111111011111111000000110000100", 
    101 => "00111111011111111000001101111011", 
    102 => "00111111011111111000011000011010", 
    103 => "00111111011111111000100010111001", 
    104 => "00111111011111111000101010110001", 
    105 => "00111111011111111000110010101000", 
    106 => "00111111011111111000111101000111", 
    107 => "00111111011111111001000100111111", 
    108 => "00111111011111111001001100110110", 
    109 => "00111111011111111001010100101101", 
    110 => "00111111011111111001011100100100", 
    111 => "00111111011111111001100100011100", 
    112 => "00111111011111111001101001101011", 
    113 => "00111111011111111001110001100011", 
    114 => "00111111011111111001111001011010", 
    115 => "00111111011111111001111110101001", 
    116 => "00111111011111111010000110100001", 
    117 => "00111111011111111010001011110000", 
    118 => "00111111011111111010010011101000", 
    119 => "00111111011111111010011000110111", 
    120 => "00111111011111111010011110000111", 
    121 => "00111111011111111010100011010110", 
    122 => "00111111011111111010101011001110", 
    123 => "00111111011111111010110000011101", 
    124 => "00111111011111111010110101101101", 
    125 => "00111111011111111010111010111100", 
    126 => "00111111011111111011000000001100", 
    127 => "00111111011111111011000101011011", 
    128 => "00111111011111111011001000000011", 
    129 => "00111111011111111011001101010011", 
    130 => "00111111011111111011010010100010", 
    131 => "00111111011111111011010111110010", 
    132 => "00111111011111111011011010011010", 
    133 => "00111111011111111011011111101001", 
    134 => "00111111011111111011100100111001", 
    135 => "00111111011111111011100111100000", 
    136 => "00111111011111111011101100110000", 
    137 => "00111111011111111011101111011000", 
    138 => "00111111011111111011110100100111", 
    139 => "00111111011111111011110111001111", 
    140 => "00111111011111111011111100011111", 
    141 => "00111111011111111011111111000110", 
    142 => "00111111011111111100000001101110", 
    143 => "00111111011111111100000110111110", 
    144 => "00111111011111111100001001100101", 
    145 => "00111111011111111100001100001101", 
    146 => "00111111011111111100010001011101", 
    147 => "00111111011111111100010100000101", 
    148 => "00111111011111111100010110101100", 
    149 => "00111111011111111100011001010100", 
    150 => "00111111011111111100011011111100", 
    151 => "00111111011111111100100001001011", 
    152 => "00111111011111111100100011110011", 
    153 => "00111111011111111100100110011011", 
    154 => "00111111011111111100101001000011", 
    155 => "00111111011111111100101011101010", 
    156 => "00111111011111111100101110010010", 
    157 => "00111111011111111100110000111010", 
    158 => "00111111011111111100110011100010", 
    159 => "00111111011111111100110110001010", 
    160 => "00111111011111111100111000110001", 
    161 => "00111111011111111100111011011001", 
    162 => "00111111011111111100111110000001", 
    163 => "00111111011111111101000000101001", 
    164 to 165=> "00111111011111111101000011010000", 
    166 => "00111111011111111101000101111000", 
    167 => "00111111011111111101001000100000", 
    168 => "00111111011111111101001011001000", 
    169 => "00111111011111111101001101101111", 
    170 to 171=> "00111111011111111101010000010111", 
    172 => "00111111011111111101010010111111", 
    173 => "00111111011111111101010101100111", 
    174 to 175=> "00111111011111111101011000001111", 
    176 => "00111111011111111101011010110110", 
    177 to 178=> "00111111011111111101011101011110", 
    179 => "00111111011111111101100000000110", 
    180 to 181=> "00111111011111111101100010101110", 
    182 => "00111111011111111101100101010101", 
    183 to 184=> "00111111011111111101100111111101", 
    185 => "00111111011111111101101010100101", 
    186 to 187=> "00111111011111111101101101001101", 
    188 to 189=> "00111111011111111101101111110101", 
    190 to 191=> "00111111011111111101110010011100", 
    192 => "00111111011111111101110101000100", 
    193 to 194=> "00111111011111111101110111101100", 
    195 to 196=> "00111111011111111101111010010100", 
    197 to 198=> "00111111011111111101111100111011", 
    199 to 200=> "00111111011111111101111111100011", 
    201 to 202=> "00111111011111111110000010001011", 
    203 to 205=> "00111111011111111110000100110011", 
    206 to 207=> "00111111011111111110000111011010", 
    208 to 209=> "00111111011111111110001010000010", 
    210 to 212=> "00111111011111111110001100101010", 
    213 to 214=> "00111111011111111110001111010010", 
    215 to 217=> "00111111011111111110010001111010", 
    218 to 219=> "00111111011111111110010100100001", 
    220 to 222=> "00111111011111111110010111001001", 
    223 to 225=> "00111111011111111110011001110001", 
    226 to 228=> "00111111011111111110011100011001", 
    229 to 231=> "00111111011111111110011111000000", 
    232 to 234=> "00111111011111111110100001101000", 
    235 to 238=> "00111111011111111110100100010000", 
    239 to 241=> "00111111011111111110100110111000", 
    242 to 245=> "00111111011111111110101001100000", 
    246 to 249=> "00111111011111111110101100000111", 
    250 to 253=> "00111111011111111110101110101111", 
    254 to 255=> "00111111011111111110110001010111" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity FFT_cosVec is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of FFT_cosVec is
    component FFT_cosVec_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    FFT_cosVec_rom_U :  component FFT_cosVec_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


